{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-project-query-tsx-content-file-path-content-projects-emilia-index-mdx-a10805d44e4574798ba1.js","mappings":"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","sources":["webpack://emilia/./content/projects/emilia/index.mdx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/project-query.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/header-project.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project-pagination.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/components/project.tsx","webpack://emilia/./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/project.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://assetstore.unity.com/packages/slug/137435\"\n  }, \"Asset Store Link\")), \"\\n\", React.createElement(_components.p, null, \"Fluid Dynamics is a 2D GPU Particle System Fluid Simulation for Unity. Fire, smoke or any other fluid in your game in realtime using GPU.\"), \"\\n\", React.createElement(_components.p, null, \"Fluid Dynamics uses Compute Shaders and PC,  Linux, Android  compatible, but please make additional check here\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Features:\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"PC & mobile friendly\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Full source code included\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"#\"\n  }, \"Vorticity control\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"#\"\n  }, \"Viscosity control\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Multiple simulation spaces\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Full control of physically-based simulation\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Flow followers included\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Multiple emitters\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"PC & mobile controls (included)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Example Projects NOTE:\")), \"\\n\", React.createElement(_components.p, null, \"Follow instructions in the \", React.createElement(_components.strong, null, \"ReadMe\"), \".\", React.createElement(_components.br), \"\\n\", \"Big size is due to Unity Post-Processing Stack.\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/debri/gatsby-starter-portfolio-emilia/content/projects/emilia/index.mdx\";\nimport ProjectComponent, {Head} from \"../components/project\";\nProjectComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2283158628\";\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { Flex, jsx, Container, Heading } from \"theme-ui\"\nimport { Themed } from \"@theme-ui/mdx\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport HeaderBackground from \"./header-background\"\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\nimport Svg from \"./svg\"\n\ntype HeaderProjectProps = {\n  title: string\n  areas: string[]\n  description?: string\n  date: string\n}\n\ntype AvatarStaticQuery = {\n  file: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData\n    }\n  }\n}\n\nconst HeaderProject = ({ title, areas, description = ``, date }: HeaderProjectProps) => {\n  const { name } = useEmiliaConfig()\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\n    query {\n      file(name: { eq: \"avatar\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FIXED, width: 40, height: 40, quality: 100)\n        }\n      }\n    }\n  `)\n\n  const titleProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const backButtonProps = useSpring({\n    config: config.slow,\n    from: { opacity: 0, transform: `translate3d(-30px, 0, 0)` },\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\n  })\n  const infoProps = useSpring({ config: config.slow, delay: 500, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Flex as=\"header\" variant=\"layout.header\">\n      <HeaderBackground />\n      <Container sx={{ textAlign: `center`, my: 4, zIndex: 10 }}>\n        <animated.div style={backButtonProps}>\n          <Link\n            to=\"/\"\n            aria-label={`${name} - Back to homepage`}\n            sx={{\n              display: `flex`,\n              alignItems: `center`,\n              color: `text`,\n              textDecoration: `none`,\n              svg: {\n                transition: `transform 0.25s cubic-bezier(0.455, 0.03, 0.515, 0.955)`,\n              },\n              \"&:hover, &:focus\": { svg: { transform: `translateX(-6px)` } },\n            }}\n          >\n            <Svg id=\"leftArrow\" width=\"20\" height=\"18\" />\n            <div\n              sx={{\n                overflow: `hidden`,\n                borderRadius: `full`,\n                width: `40px`,\n                height: `40px`,\n                display: `inline-block`,\n                boxShadow: `md`,\n                mx: 2,\n              }}\n            >\n              {avatar?.file?.childImageSharp?.gatsbyImageData && (\n                <GatsbyImage image={avatar.file.childImageSharp.gatsbyImageData} alt=\"Avatar\" />\n              )}\n            </div>\n            <span sx={{ fontWeight: `medium` }}>{name}</span>\n          </Link>\n        </animated.div>\n        <div sx={{ mt: 4, mb: [6, 6, 7] }}>\n          <animated.div style={titleProps}>\n            <Heading as=\"h1\" variant=\"styles.h1\">\n              {title}\n            </Heading>\n          </animated.div>\n          <animated.div style={infoProps}>\n            <Themed.p sx={{ mb: 0, mt: 4 }}>{date}</Themed.p>\n            <div>\n              {areas.map((area, index) => (\n                <React.Fragment key={area}>\n                  {index > 0 && `, `}\n                  {area}\n                </React.Fragment>\n              ))}\n            </div>\n            {description && (\n              <div sx={{ maxWidth: `900px`, mx: `auto`, mt: 5, p: { textAlign: `left`, overflowWrap: `break-word` } }}>\n                {description}\n              </div>\n            )}\n          </animated.div>\n        </div>\n      </Container>\n    </Flex>\n  )\n}\n\nexport default HeaderProject\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Card from \"./card\"\n\ntype ProjectPaginationProps = {\n  prev: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n  next: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n}\n\nconst ProjectPagination = ({ prev, next }: ProjectPaginationProps) => (\n  <div sx={{ mt: 6, mb: 4 }}>\n    <div sx={{ display: `grid`, gridTemplateColumns: `250px 1fr`, alignItems: `center`, mb: 4 }}>\n      <h2\n        sx={{\n          color: `textMuted`,\n          fontWeight: `medium`,\n          letterSpacing: `widest`,\n          textTransform: `uppercase`,\n          fontSize: 1,\n          my: 0,\n        }}\n      >\n        More Projects\n      </h2>\n      <div sx={{ width: `100%`, height: `2px`, backgroundColor: `muted` }} />\n    </div>\n    <div\n      sx={{\n        display: `grid`,\n        gridTemplateColumns: [`1fr`, `1fr`, `1fr 1fr`],\n        gridGap: [4, 4, 5],\n        a: { position: `relative` },\n        \"[data-name='card-overlay']\": {\n          position: `absolute`,\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        },\n      }}\n    >\n      {prev && <Card item={prev} />}\n      {next && <Card item={next} />}\n    </div>\n  </div>\n)\n\nexport default ProjectPagination\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Container } from \"theme-ui\"\nimport { animated, useSpring, config } from \"react-spring\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport HeaderProject from \"./header-project\"\nimport ProjectPagination from \"./project-pagination\"\nimport Seo from \"./seo\"\n\nexport type EmiliaProjectProps = {\n  project: {\n    excerpt: string\n    date: string\n    slug: string\n    title: string\n    areas: string[]\n    cover: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n  images: {\n    nodes: {\n      name: string\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }[]\n  }\n}\n\nexport type EmiliaProjectPageContext = {\n  prev: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n  next: {\n    slug: string\n    contentFilePath: string\n    title: string\n    cover: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }\n  }\n}\n\nconst Project: React.FC<React.PropsWithChildren<PageProps<EmiliaProjectProps, EmiliaProjectPageContext>>> = ({\n  data: { project, images },\n  pageContext: { prev, next },\n  children,\n}) => {\n  const imageFade = useSpring({ config: config.slow, delay: 800, from: { opacity: 0 }, to: { opacity: 1 } })\n\n  return (\n    <Layout>\n      <HeaderProject title={project.title} description={children} areas={project.areas} date={project.date} />\n      <Container sx={{ mt: [`-6rem`, `-6rem`, `-8rem`] }}>\n        {images.nodes.map((image) => (\n          <animated.div key={image.name} style={imageFade}>\n            <GatsbyImage\n              image={image.childImageSharp.gatsbyImageData}\n              alt={image.name}\n              sx={{ mb: [4, 4, 5], boxShadow: `xl` }}\n            />\n          </animated.div>\n        ))}\n        <ProjectPagination prev={prev} next={next} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Project\n\nexport const Head: HeadFC<EmiliaProjectProps> = ({ data: { project } }) => (\n  <Seo\n    title={project.title}\n    description={project.excerpt}\n    pathname={project.slug}\n    image={project.cover.childImageSharp.resize.src}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Project, { Head, EmiliaProjectProps, EmiliaProjectPageContext } from \"../../../components/project\"\n\nexport default function EmiliaCoreProject({ ...props }: PageProps<EmiliaProjectProps, EmiliaProjectPageContext>) {\n  return <Project {...props} />\n}\n\nexport { Head }\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","strong","ul","li","br","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","ProjectComponent","GATSBY_COMPILED_MDX","_ref","_avatar$file","_avatar$file$childIma","title","areas","description","date","name","useEmiliaConfig","avatar","useStaticQuery","titleProps","useSpring","config","slow","from","opacity","transform","to","backButtonProps","infoProps","delay","jsx","Flex","as","variant","HeaderBackground","Container","sx","textAlign","my","zIndex","animated","div","style","Link","display","alignItems","color","textDecoration","svg","transition","Svg","id","width","height","overflow","borderRadius","boxShadow","mx","file","childImageSharp","gatsbyImageData","GatsbyImage","image","alt","fontWeight","mt","mb","Heading","Themed","map","area","index","key","maxWidth","overflowWrap","prev","next","gridTemplateColumns","letterSpacing","textTransform","fontSize","backgroundColor","gridGap","position","top","left","right","bottom","Card","item","data","project","images","pageContext","children","imageFade","Layout","HeaderProject","nodes","ProjectPagination","Head","_ref2","Seo","excerpt","pathname","slug","cover","resize","src","EmiliaCoreProject","Project"],"sourceRoot":""}